Linki:
------
***https://developer.mozilla.org/bm/docs/Web/JavaScript
https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors

Pytania:
---------
1.Co to first-class citizen?
To entity/coś co może być przekazywane jako argument do funkcji, zwracane z funkcji, coś co może być modifikowane i
przypisywane do zmiennej. JavaScript traktuje funkcje jak first-class citizen(obiekty).

2.Dlaczego JS jest językiem interpretowanym?
Dlatego że nie jest kompilowany do postaci binarnej(tak jak w C, C++) ani kodu pośredniego(Java).
Kod żródłowy jest interpretowany przez interpreter w przeglądarce internetowej.

3.Jak tworzone sa obiekty w JS?
Najpierw jest tworzony pusty obiekt a następnie są do niego attached pola i metody.
Tak powstały obiekt może stać się wzorcem/prototypem do tworzenia podobnych obiektów.

4.Jaki serwer został napisany w JS?
Node.js

5.Do czego służy obiekt localStorage?
Do przechowywania danych w pamięci przeglądarki.
https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API

6.Do czego służy operator instanceof?
Sprawdza czy obiekt jest instancją innego obiektu.

7.Czym się różni browser API od Third party API?
Browser API jest wbudowane w przeglądarkę i daje zbiór metod zaimplementowanych w przeglądarce
(nie musimy pisać kodu w JS, kod ten już został napisany i zaimplementowany w przeglądarce
i możemy już z niego korzystać i wywoływać metody).
Np. DOM API, XMLHttpRequest API
---
Third party API nie implementuje przeglądarka, musimy dostarczyć jego kod w JS.
Np. Google Maps API, Twitter API, FB API

8.Jakie API implementuje Chrome(browser api)?
DOM, XMLHttpRequest oraz HTML5 APIs: localStorage, application cache
https://developer.chrome.com/extensions/api_other

9.Jak jest opalany kod JS?
Każda zakładka w przeglądarce ma swoje własne środowisko uruchomieniowe i kod
jest uruchomiony w każdej zakładce niezależnie.

10.Jak jest uruchamiany kod JS?
Interpreter czyta i uruchamia kod od dołu do góry.

11.Na czym polega variable hoisting w JS?
Polega to na tym że najpier w kodzie są wyszukiwane deklaracje zmiennych a następnie jest uruchamiany pozostały kod.
Oznacza to że w kodzie JS można użyć zmiennej nawet jeśli jej deklaracja znajduje się w dalszym miejscu w kodzie.

PYTANIA:
1.Jak tworzone są obiekty w JS? Gdzie są przechowywane(sterta/stos)? Czy obiekty mają konstruktory?
2.Gdzie są przechowywane variable w JS, jaka jest różnica gdy tworzymy przez var nazwa albo gdy stosujemy
samą nazwę ?
3.Czym się różnią operatory porównania == i === ?
4.Funkcje anonimowe w JS?
5.Dlaczego odświerzanie strony przy otwartej konsoli nie czyści localStorage z zapisanych tam rzeczy?
6.Jak sprawdzić jakie API implementuje dana przeglądarka?(DOM API, WEB STORAGE API ectr)
7.Dlaczego skoro kod jest czytany od dołu do góry to funcje w JS mogą być zadeklarowane na końcu strony.
8.Czy modifikować style za pomocą element.style.backgroundColor czy element.setAttribute('style', '')
